import re 


    # expand() 
    # group() - Возвращает найденное совпадение по номеру или имени группы.
    # groups() - возвращает кортеж со всеми группами, кроме нулевой
    # groupdict() - словарь, ключи которого - имена групп, а значения - найденные совпадения этих групп
    # start()  возвращают индексы начала и конца совпадения с регулярным выражением группы, номер или имя которой были переданы в метод
    # end()
    # span() кортеж с индексом начала и конца совпадения группы, номер или имя которой были переданы в метод
    # lastindex - номер последней найденной группы. None, если группы не используются
    # lastgroup - Возвращает имя последней найденной именованной группы. None, если именованные группы не используются
    # pos - это позиция, с которой функция начинает искать совпадения.
    # endpos - индекс последнего символа в строке.
    # re - можно получить регулярное выражение, которое использовалось для поиска
    # string - можно получить строку, в которой искались совпадения

# ------------- Параграфы ------------------------
s = '<p Неправильный параграф</p></p>1</p><p>2</p><p3/p>'
regex = re.compile(r'<p.*?>(.*?)</p>')
match = re.finditer(regex, s)
print(*[x[1] for x in match if x[1]], sep='\n')

# ------------ Разделяем найденные ссылки -----------
s = 'Наступаешь на одни и те же грабли: https://vk.com/video-460389_160321403 https://pikabu.ru/story/vse_schitayut_sebya_unikalnyimi_poka_ne_prikhoditsya_pokupat_domen_dlya_svoego_startapa_9132005#comments https://www.google.com/search?q=query https://yandex.ru/search/?lr=16&text=query'
regex = re.compile(r'((?<=\s)|(?<=^))(?P<prot>[a-z]{4,5})://(?P<domain>([a-z]+\.){1,}[a-z]+)/.*?(?P<params>\?[a-z=&0-9]+?){0,}(?P<ancer>#[a-z]+?){0,}((?=\s)|(?=$))')

match = re.finditer(regex, s)
for x in match:
    print(f'''Полная ссылка: {x[0]}
Протокол: {x.group('prot')} | Домен: {x.group('domain')} | Параметры: {x.group('params')} | Якорь: {x.group('ancer')}''')
    print()